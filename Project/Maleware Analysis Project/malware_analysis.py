import os
import pefile
import hashlib
import sys
from datetime import datetime

def calculate_hash(file_path):
    """Calculate the hash of the file."""
    hasher = hashlib.sha256()
    with open(file_path, 'rb') as f:
        while chunk := f.read(8192):
            hasher.update(chunk)
    return hasher.hexdigest()

def format_timestamp(timestamp):
    """Convert timestamp to human-readable format."""
    return datetime.fromtimestamp(timestamp).strftime('%Y-%m-%d %H:%M:%S')

def analyze_file(file_path):
    """Analyze the PE file."""
    if not os.path.exists(file_path):
        print("Error: The specified file does not exist.")
        return

    try:
        pe = pefile.PE(file_path)
        print(f"--- Analyzing the file: {file_path} ---")
        
        # Metadata
        print(f"File Size: {os.path.getsize(file_path)} bytes")
        print("  - This shows how big the file is.")
        
        print(f"Creation Date: {format_timestamp(pe.FILE_HEADER.TimeDateStamp)}")
        print("  - This is when the file was created.")
        
        print(f"Entry Point: {hex(pe.OPTIONAL_HEADER.AddressOfEntryPoint)}")
        print("  - This is where the program starts running in memory.")
        
        print(f"SHA-256 Hash: {calculate_hash(file_path)}")
        print("  - This is a unique code for this file based on its content.")
        
        print("\nSections of the file:")
        
        # Check for suspicious sections
        for section in pe.sections:
            section_name = section.Name.decode().strip()
            print(f"  - {section_name}: {section.Misc_VirtualSize} bytes")
            if b'.text' in section.Name:
                print("    [!] This section may contain executable code.")
        
        print("\n--- Analysis Complete ---")
    except Exception as e:
        print(f"Error analyzing file: {e}")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: python malware_analysis.py <file_path>")
        sys.exit(1)

    file_path = sys.argv[1]
    analyze_file(file_path)
